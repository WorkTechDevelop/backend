name: Deploy to K3s

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout репозитория
        uses: actions/checkout@v4

      - name: Установка JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Делаем gradlew исполняемым
        run: chmod +x gradlew

      - name: Сборка JAR-файла с версией
        run: ./gradlew build -x test

      - name: Определяем версию JAR
        id: version
        run: echo "JAR_VERSION=$(ls build/libs/WorkTask-0.0.1-*.jar | grep -o '0.0.1-[a-f0-9]*' | head -n 1)" >> $GITHUB_ENV

      - name: Копирование JAR-файла на сервер
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "build/libs/WorkTask-0.0.1-${{ env.JAR_VERSION }}.jar"
          target: "/home/deployer/backend"

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Подключение по SSH и деплой в K3s
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -e  # Остановка при ошибке
            cd /home/deployer/backend
            
            # Получаем версию JAR
            JAR_VERSION=$(ls WorkTask-0.0.1-*.jar | grep -o '0.0.1-[a-f0-9]*')
            
            # Переименовываем JAR для Dockerfile
            mv WorkTask-${JAR_VERSION}.jar app.jar
            
            # Определяем тег образа
            COMMIT_SHA=$(git rev-parse --short HEAD)
            
            # Собираем Docker-образ
            docker build --no-cache -t backend:$COMMIT_SHA .
            
            # Сохраняем образ и загружаем в K3s
            docker save -o backend.tar backend:$COMMIT_SHA
            ctr -n k8s.io images import /home/deployer/backend.tar
            
            # Обновляем образ в Kubernetes
            k3s kubectl set image deployment myapp myapp=backend:$COMMIT_SHA || k3s kubectl apply -f deployment.yaml
            
            k3s kubectl rollout restart deployment myapp